<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CAZZZZZZ&#39;s Blog</title>
  
  <subtitle>keep</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-03T07:14:33.247Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CAZZZZZZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The Missing Semester of Your CS Education_2</title>
    <link href="http://example.com/2021/12/28/The%20Missing%20Semester%20of%20Your%20CS%20Education_2/"/>
    <id>http://example.com/2021/12/28/The%20Missing%20Semester%20of%20Your%20CS%20Education_2/</id>
    <published>2021-12-28T15:21:38.000Z</published>
    <updated>2022-01-03T07:14:33.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shell工具和脚本"><a href="#Shell工具和脚本" class="headerlink" title="Shell工具和脚本"></a>Shell工具和脚本</h1><p>在这节课中，会展示bash作为脚本语言的一些基础操作，以及集中最常用的shell工具</p><span id="more"></span><p>课程的链接：<a href="https://missing-semester-cn.github.io/2020/shell-tools/">The Shell</a></p><p>没想到在bilibili能搜到带中文字幕的……感谢汉化组……</p><p>通过视频，能了解到很多文档里的教程没提到的细节……</p><h2 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h2><p>上一节学习了如何在shell中执行命令，并使用管道将命令组合使用。这一节学习shell脚本，具体来说，本节会专注于bash脚本，因为它最流行，应用更为广泛。下面记录一些之前没注意过或者头一次了解的东西。</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>要注意的一点是，shell脚本中使用空格会起到分割参数的作用，有时候可能会造成混淆，需要多加检查。</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>或运算符“||”是短路运算符，例如A||B，如果A是true，那么B就不会被检查；如果A是false，才会检查B。</p><p>分号运算符“；”能够在一行输入里连接两个命令，例如A；B，那么A和B都会被检查。</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>pwd是输出当前位置。例如使用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "we are in $(pwd)"</span><br></pre></td></tr></tbody></table></figure><p>能够输出当前的位置</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>grep foobar “$file” &gt; /dev/null 2&gt; /dev/null这句话里面的/dev/null 2&gt; /dev/null是把输出直接丢弃。这个/dev/null是类unix系统自带的东西。</p><p>“&gt;&gt;”运算符是把东西添加在文件末尾。</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>就像win和python里查询某一类的文件是否存在时用“.类型名”，shell里可以通过*.类型名来查询，例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls *.sh</span><br></pre></td></tr></tbody></table></figure><p>可以查询当前目录下所有.sh文件。</p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>shellcheck命令可以查warning和bug，记得好好利用，例如</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shellcheck mcd.sh</span><br></pre></td></tr></tbody></table></figure><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>“tldr”命令能够给一些命令的简单示例</p><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p>“fzf”模糊搜索</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Shell工具和脚本&quot;&gt;&lt;a href=&quot;#Shell工具和脚本&quot; class=&quot;headerlink&quot; title=&quot;Shell工具和脚本&quot;&gt;&lt;/a&gt;Shell工具和脚本&lt;/h1&gt;&lt;p&gt;在这节课中，会展示bash作为脚本语言的一些基础操作，以及集中最常用的shell工具&lt;/p&gt;</summary>
    
    
    
    
    <category term="The Missing Semester of Your CS Education" scheme="http://example.com/tags/The-Missing-Semester-of-Your-CS-Education/"/>
    
  </entry>
  
  <entry>
    <title>The Missing Semester of Your CS Education_1_Shell</title>
    <link href="http://example.com/2021/12/25/The%20Missing%20Semester%20of%20Your%20CS%20Education_1_Shell/"/>
    <id>http://example.com/2021/12/25/The%20Missing%20Semester%20of%20Your%20CS%20Education_1_Shell/</id>
    <published>2021-12-25T02:59:29.000Z</published>
    <updated>2021-12-26T15:15:13.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-Shell"><a href="#The-Shell" class="headerlink" title="The Shell"></a>The Shell</h1><p>回归本源</p><p>在研究生的生活中，我通过编写bat和py文件来让机器执行重复的过程，这个shell就是类似之前bat和py的东西。在这节课程中，我们将会学习如何使用bash。bash是被广泛使用的shell，在终端内，使用bash来控制我们的计算机。</p><span id="more"></span><p>课程是有自己网页的，在这里我就不再把内容搬过来了，大家直接点击下方链接去看就可以，我主要是在这里把自己跟着教程打的内容和实现的课后习题展示出来。</p><p>课程的链接：<a href="https://missing-semester-cn.github.io/2020/course-shell/">The Shell</a></p><p>课程使用的Linux，图省事我是用Win自带的Hyper-V装的虚拟机。</p><p>配置虚拟机的链接<a href="https://www.bilibili.com/read/cv10856386/">Hyper-V</a></p><h2 id="使用shell"><a href="#使用shell" class="headerlink" title="使用shell"></a>使用shell</h2><p>我打开终端之后，提示符是这样子的</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[zph@localhost ~]$</span><br></pre></td></tr></tbody></table></figure><p>执行date程序得到的结果也和教程有所区别，我的是这样子的</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zph@localhost ~]$ date</span><br><span class="line">Sat Dec 25 13:13:35 CST 2021</span><br></pre></td></tr></tbody></table></figure><p>咨询环境变量$PATH后，进行程序搜索的路径为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zph@localhost ~]$ echo $PATH</span><br><span class="line">/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/zph/.local/bin:/home/zph/bin</span><br></pre></td></tr></tbody></table></figure><h2 id="在shell中导航"><a href="#在shell中导航" class="headerlink" title="在shell中导航"></a>在shell中导航</h2><p>使用 ‘ls -l /home’ 命令之后，我的输出结果是</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zph@localhost ~]$ ls -l /home</span><br><span class="line">drwx------. 2 zph zph 62 Apr 11 2018 zph</span><br></pre></td></tr></tbody></table></figure><p>根据教程，本行第一个字符d表示zph是一个目录。接下来的9个字符，每3个字符组成一组。（rwx）分别表示了文件所有者（zph），用户组（zoh）以及其他人具有的权限。再后边（—）和（—）表示该用户不具备相应的权限。</p><h2 id="在程序中创建连接"><a href="#在程序中创建连接" class="headerlink" title="在程序中创建连接"></a>在程序中创建连接</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[zph@localhost ~]$ ls -l /</span><br></pre></td></tr></tbody></table></figure><p>这个命令会输出一堆东西</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[zph@localhost ~]$ ls -l / tail -n1</span><br></pre></td></tr></tbody></table></figure><p>这个命令是只输出一堆东西的最后一个最后一个</p><hr><h2 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h2><h3 id="1-在-tmp下新建一个名为missing的文件夹"><a href="#1-在-tmp下新建一个名为missing的文件夹" class="headerlink" title="1. 在/tmp下新建一个名为missing的文件夹"></a>1. 在/tmp下新建一个名为missing的文件夹</h3><p>使用cd命令切换到tmp文件夹，再使用mkdir建立新文件夹即可</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd tmp</span><br><span class="line">mkdir missing</span><br><span class="line">cd missing</span><br></pre></td></tr></tbody></table></figure><h3 id="2-用man查看程序touch的使用手册"><a href="#2-用man查看程序touch的使用手册" class="headerlink" title="2.用man查看程序touch的使用手册"></a>2.用man查看程序touch的使用手册</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man touch</span><br></pre></td></tr></tbody></table></figure><h3 id="3-用touch在missing文件夹中新建一个叫semester的文件"><a href="#3-用touch在missing文件夹中新建一个叫semester的文件" class="headerlink" title="3.用touch在missing文件夹中新建一个叫semester的文件"></a>3.用touch在missing文件夹中新建一个叫semester的文件</h3><p>由touch的使用手册可知，touch的用法为</p><p>touch [OPTION]… FILE…</p><p>其中OPTION可以为-a，-c等等，每个option都有解释，这里只需要新建一个文件，不需要添加option，直接touch semester就可以。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch semester</span><br></pre></td></tr></tbody></table></figure><h3 id="4-将以下内容一行一行地写入semester文件："><a href="#4-将以下内容一行一行地写入semester文件：" class="headerlink" title="4.将以下内容一行一行地写入semester文件："></a>4.将以下内容一行一行地写入semester文件：</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">curl --head --silent https://missing.csail.mit.edu</span><br></pre></td></tr></tbody></table></figure><p>根据前面学习的内容，这里用单引号将含有特殊意义的字符包裹起来就可以</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo '#!/bin/sh' &gt; semester</span><br><span class="line">echo curl --head --silent https://missing.csail.mit.edu &gt; semester</span><br></pre></td></tr></tbody></table></figure><h3 id="5-尝试执行这个文件。例如，将该脚本的路径（-semester）输入到shell中并回车。如果程序无法执行，请使用ls命令来获取信息并理解其不能执行的原因"><a href="#5-尝试执行这个文件。例如，将该脚本的路径（-semester）输入到shell中并回车。如果程序无法执行，请使用ls命令来获取信息并理解其不能执行的原因" class="headerlink" title="5.尝试执行这个文件。例如，将该脚本的路径（./semester）输入到shell中并回车。如果程序无法执行，请使用ls命令来获取信息并理解其不能执行的原因"></a>5.尝试执行这个文件。例如，将该脚本的路径（./semester）输入到shell中并回车。如果程序无法执行，请使用ls命令来获取信息并理解其不能执行的原因</h3><p>我输入./semester，敲回车之后，直接告诉我没有权限：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: ./semester: Permission denied</span><br></pre></td></tr></tbody></table></figure><p>输入ls -l查看原因，返回如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total 4</span><br><span class="line">-rw-rw-r--. 1 zph zph 51 Dec 26 15:50 semester</span><br></pre></td></tr></tbody></table></figure><p>根据前面的教程分析，rw-分别表示文件所有者的权限，rw-表示用户组的权限，r–表示其他人所具有的权限，其中-表示用户不具备相应的权限。大家都没有’x’的权限，没办法执行这个文件。</p><h3 id="6-查看chmod的手册"><a href="#6-查看chmod的手册" class="headerlink" title="6.查看chmod的手册"></a>6.查看chmod的手册</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man chmod</span><br></pre></td></tr></tbody></table></figure><h3 id="7-使用chmod命令改变权限，使-semester能够成功执行，不要使用sh-semester来执行该程序。"><a href="#7-使用chmod命令改变权限，使-semester能够成功执行，不要使用sh-semester来执行该程序。" class="headerlink" title="7.使用chmod命令改变权限，使./semester能够成功执行，不要使用sh semester来执行该程序。"></a>7.使用chmod命令改变权限，使./semester能够成功执行，不要使用sh semester来执行该程序。</h3><p>从chmod手册可以看到，数字4表示read，2表示write，1表示exe，为了把权限都拿到，那就写7（7=4+2+1）。假如我输入的是：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chomd 776 semester</span><br><span class="line">ls -l</span><br></pre></td></tr></tbody></table></figure><p>得到结果返回</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total 4</span><br><span class="line">-rwxrwxrw-. 1 zph zph 51 Dec 26 15:50 semester</span><br></pre></td></tr></tbody></table></figure><h3 id="8-使用-和-gt-，将semester文件输出的最后更改日期，写入主目录下的last-modified-txt的文件中"><a href="#8-使用-和-gt-，将semester文件输出的最后更改日期，写入主目录下的last-modified-txt的文件中" class="headerlink" title="8. 使用|和>，将semester文件输出的最后更改日期，写入主目录下的last-modified.txt的文件中"></a>8. 使用|和&gt;，将semester文件输出的最后更改日期，写入主目录下的last-modified.txt的文件中</h3><p>最后更改日期通过grep last-modified搜索出来</p><p>grep（global search regular expression and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p><p>主目录文件用 ~/last-modified.txt实现</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./semester | grep last-modified &gt; ~/last-modified.txt</span><br><span class="line">cat ~/last-modified.txt</span><br></pre></td></tr></tbody></table></figure><h3 id="9-写一段命令来从-sys中获取笔记本的电量信息，或者台式机CPU的温度"><a href="#9-写一段命令来从-sys中获取笔记本的电量信息，或者台式机CPU的温度" class="headerlink" title="9.写一段命令来从/sys中获取笔记本的电量信息，或者台式机CPU的温度"></a>9.写一段命令来从/sys中获取笔记本的电量信息，或者台式机CPU的温度</h3><p>这个就是cd进sys之后，用ls不断查询文件夹，笔记本的电量信息在/sys/class/power_supply里面。</p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;The-Shell&quot;&gt;&lt;a href=&quot;#The-Shell&quot; class=&quot;headerlink&quot; title=&quot;The Shell&quot;&gt;&lt;/a&gt;The Shell&lt;/h1&gt;&lt;p&gt;回归本源&lt;/p&gt;
&lt;p&gt;在研究生的生活中，我通过编写bat和py文件来让机器执行重复的过程，这个shell就是类似之前bat和py的东西。在这节课程中，我们将会学习如何使用bash。bash是被广泛使用的shell，在终端内，使用bash来控制我们的计算机。&lt;/p&gt;</summary>
    
    
    
    
    <category term="The Missing Semester of Your CS Education" scheme="http://example.com/tags/The-Missing-Semester-of-Your-CS-Education/"/>
    
  </entry>
  
  <entry>
    <title>MarkDonw语法学习</title>
    <link href="http://example.com/2021/12/20/MarkDonw%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/12/20/MarkDonw%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-12-20T11:58:04.000Z</published>
    <updated>2021-12-21T07:50:02.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MarkDown语法学习"><a href="#MarkDown语法学习" class="headerlink" title="MarkDown语法学习"></a>MarkDown语法学习</h1><p>本文总结了一些常用语法…</p><span id="more"></span><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h4 id="依次使用“-”打出n级标题"><a href="#依次使用“-”打出n级标题" class="headerlink" title="依次使用“#”打出n级标题"></a>依次使用“#”打出n级标题</h4><hr><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><p>用左右两个*将文字包起来：<br><strong>加粗</strong></p><hr><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p>用左右一个*将文字包起来：<br><em>斜体</em></p><hr><h2 id="加粗斜体"><a href="#加粗斜体" class="headerlink" title="加粗斜体"></a>加粗斜体</h2><p>用左右三个*将文字包起来：<br><em><strong>加粗斜体</strong></em></p><hr><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>用左右两个~包起来：<br><del>删除</del></p><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在引用的文字前面加&gt;，可以嵌套使用，例如</p><blockquote><p>引用a</p><blockquote><p>a中引用b</p></blockquote></blockquote><hr><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个或三个以上的*，例如：</p><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>语法如下：</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_match%2F0%2F6902462713%2F0.jpg&amp;refer=http%3A%2F%2Finews.gtimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1642606046&amp;t=b9129f0f459d8ae51c35cb268d01b9c6" alt="KUUGA" title="KUUGA"></p><hr><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>语法如下<br><a href="http://baidu.com" 百度"="" "="">百度搜索</a></p><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表用-+*任意一种都可以，例如</p><ul><li>列表内容1</li></ul><ul><li>列表内容2</li></ul><ul><li>列表内容3</li></ul><p>注意，- + *跟内容之间都要有一个空格</p><p>有序列表用数字+点来表示，例如</p><ol><li>列表内容4</li><li>列表内容5</li><li>列表内容6<br>注意， 序号跟内容之间要有空格</li></ol><p>列表嵌套，上一级和下一级之间敲三个空格</p><ul><li>列表A<ul><li>列表a</li></ul></li></ul><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>语法如下：</p><table><thead><tr><th align="center">表头</th><th align="center">表头</th><th align="center">表头</th></tr></thead><tbody><tr><td align="center">内容</td><td align="center">内容</td><td align="center">内容</td></tr><tr><td align="center">内容</td><td align="center">内容</td><td align="center">内容</td></tr></tbody></table><p>第二行分割表头和内容。</p><ul><li>有一个就行，为了对齐，多加了几个<br>文字默认居左</li><li>两边加冒号表示文字居中</li><li>右边加冒号表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>单行代码：代码之间用一个反引号包，如下：</p><p><code>hello, world!</code></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello, world 1</span><br><span class="line">hello, world 2</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MarkDown语法学习&quot;&gt;&lt;a href=&quot;#MarkDown语法学习&quot; class=&quot;headerlink&quot; title=&quot;MarkDown语法学习&quot;&gt;&lt;/a&gt;MarkDown语法学习&lt;/h1&gt;&lt;p&gt;本文总结了一些常用语法…&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/12/20/hello-world/"/>
    <id>http://example.com/2021/12/20/hello-world/</id>
    <published>2021-12-20T11:23:59.300Z</published>
    <updated>2021-12-21T07:54:49.236Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
